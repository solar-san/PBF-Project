---
title: "Project: The Forecasting Tourism 2010 Competition"
subtitle: "EM1415"
author: "Marco Solari, 875475"
format: pdf
papersize: a4
geometry:
  - left=23mm
  - right=35.5mm
  - marginparwidth=23mm
  - top=30mm
  - bottom=30mm
toc: true
number-sections: true
highlight-style: breeze
code-block-bg: true

mainfont: 'Atkinson Hyperlegible'
monofont: 'Fira Code'
mathfont: 'Noto Sans Math'
sansfont: RobotoSerifNormalRoman-Medium
fontsize: 9pt        

fig-align: 'center'
fig-width: 10
fig-height: 8

include-in-header: 
  text: |
    \usepackage{fvextra}
    \usepackage{listings}
    \usepackage{lstfiracode}
    \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
    \newfontfamily\sectionfont[]{RobotoSerifNormalRoman-ExtraBold}
    \newfontfamily\subsectionfont[]{RobotoSerifNormalRoman-Medium}
    \newfontfamily\subsubsectionfont[]{RobotoSerifNormalRoman-Medium}
    \addtokomafont{section}{\sectionfont}
    \addtokomafont{subsection}{\subsectionfont}
    \addtokomafont{subsubsection}{\subsubsectionfont}
    \makeatletter
    \def\verbatim@nolig@list{}
    \makeatother

reference-location: margin 
citation-location: margin 
---

# Setup and Data Loading

## Setup

```{r setup}
knitr::opts_chunk$set(
  echo = T,
  dev = "cairo_pdf"
)

libraries_list <- c(
  "tidyverse",
  "fpp3"
)

lapply(
  libraries_list,
  require,
  character.only = TRUE
)

theme_set(
  ggthemes::theme_tufte(
    base_size = 16,
    base_family = "Atkinson Hyperlegible"
  )
)
```

## Loading Data

```{r load data}
data_main <- readr::read_csv(
  "Data/tourism_data.csv",
  show_col_types = F
)
```

```{r checking dimensions and NA 1}
data_main %>% dim
```

```{r checkig dimensions and NA 2}
data_main %>% is.na() %>% sum
```

## Creating `tsibble`

```{r creating tourism tsibble}
tourism_full <- data_main %>% 
  mutate(
    Year = 1965:2007
  ) %>% 
  as_tsibble(
    index = Year
  )
```

```{r checking tsibble interval}
tourism_full %>% interval
```

# Assignment

## Full Plot

> _Plot all the series (an advanced data visualization tool is recommended) - what type of components are visible? Are the series similar or different? Check for problems such as missing values and possible errors._

```{r melted tsibble}
tmelt <- reshape2::melt(tourism_full,id="Year")
```

```{r full viz train}
#| fig-cap: "Printing a legend for 518 different series is not possible. However, color has been used only to differentiate the series and does not contain further information. Plotting the y-axis variable on the log scale was made necessary by the huge variation in the series values."
#| fig-width: 12
#| fig-height: 12
tmelt %>% 
  ggplot(
    aes(
      x = Year,
      y = value,
      colour = variable,
      group = variable
      )
    ) + 
  geom_line(
    alpha = .8
  ) + 
  scale_y_log10() +
  scale_color_viridis_d(
    option = "rocket"
  ) +
  labs(
    title = "Tourism Time Series",
    y = "Value"
  ) +
  theme(
    legend.position = "none"
    )
```

A check for `NA`s has already been made while loading data and it showed the presence of a large number of missing values. This is mostly to be attributed to the different starting time of the series. From the visualization we can definitely group different starting points: this suggests that another approach to visualisation might be successfully conducted by grouping series by their starting date.

Plotting all 518 series does not allow to spot details, such as the presence of seasonal patterns. However, a general upward trend is clear; moreover, we can spot some probable outliers, that should be further investigated, and some clues about the presence of cyclicality in some of the series.

## Creating Validation Set

> _Partition the series into training and validation, so that the last 4 years are in the validation period for each series. What is the logic of such a partitioning? What is the disadvantage?_

```{r}
tourism_train <- tourism_full %>% 
  filter(Year < 2004)
tourism_validation <- tourism_full %>% 
  filter(Year >= 2004)
```

The logic behind partitioning the series into a _training_ and _validation_ set is to _estimate the forecasting error_: we can train a model or apply a filter to the train set and use it to assess its performance with out-of-sample data. The main disadvantage with this approach is that we are not using all the information available to train our model; moreover, we are not computing _true forecasts_, therefore the accuracy measures from the residuals will be smaller.

## Naïve Forecasts

> _Generate naïve forecasts for all series for the validation period. For each series, create forecasts with horizons of 1, 2, 3, and 4 years ahead ($F_{t+1}, F_{t+2}, F_{t+3}$, and $F_{t+4}$)._

We know that _naïve_ forecasts consist in the last observation, $\forall h$. 

$$
y_{T + h \ | \ T} = y_T
$$

Therefore we can produce the forecasts with the following code:

```{r}
naive_forecast <- tourism_train %>% 
  filter(
    Year == 2003
  ) %>% as_data_frame()
```

```{r}
naive_forecast %>% dim
```


```{r}
merge(
    x = 2003 + 1:4,
    y = naive_forecast
  ) %>% 
  mutate(
    Year = x
  ) %>% 
  select(
    -x
  ) %>% 
  as_tsibble(
    index = Year
  )
```



## Choosing Measures

> _Which measures are suitable if we plan to combine the results for the 518 series? Consider MAE, Average error, MAPE and RMSE._

## Computing MAPE

> _For each series, compute MAPE of the naive forecasts once for the training period and once for the validation period._

## Computing MASE

> _The performance measure used in the competition is Mean Absolute Scaled Error (MASE). Explain the advantage of MASE and compute the training and validation MASE for the naive forecasts._

## MAPE Pairs

> _Create a scatter plot of the MAPE pairs, with the training MAPE on the x-axis and the validation MAPE on the y-axis. Create a similar scatter plot for the MASE pairs. Now examine both plots. What do we learn? How does performance differ between the training and validation periods? How does performance range across series?_

# Ensemble Methods

> _The competition winner, Lee Baker, used an ensemble of three methods:_
>
>  - _Naive forecasts multiplied by a constant trend_^[Global/local trend: ”globally tourism has grown ”at a rate of 6% annually.”].
>  - Linear regression.
>  - Exponentially-weighted linear regression.

> a. _Write the exact formula used for generating the first method, in the form $F_{t+k} = ... (k = 1, 2, 3, 4)$,_


> b. _What is the rational behind multiplying the naive forecasts by a constant?_^[Hint: think empirical and domain knowledge.]

> c. _What should be the dependent variable and the predictors in a linear regression model for this data? Explain_.

> d. _Fit the linear regression model to the first five series and compute forecast errors for the validation period._

> e. _Before choosing a linear regression, the winner described the following process:_

”I examined fitting a polynomial line to the data and using the line to predict future values. I tried using first through fifth order polynomials to find that the lowest MASE was obtained using a first order polynomial (simple regression line). This best fit line was used to predict future values. I also kept the $R^2$ value of the fit for use in blending the results of the prediction.”

> _What are two flaws in this approach?_

> f. _If we were to consider exponential smoothing, what particular type(s) of exponential smoothing are reasonable candidates?_

> g. _The winner concludes with possible improvements one being ”an investigation into how to come up with a blending ensemble method that doesn’t use much manual twerking would also be of benefit”. Can you suggest methods or an approach that would lead to easier automation of the ensemble step?_

> h. _The competition focused on minimizing the average MAPE of the next four values across all 518 series. How does this goal differ from goals encountered in practice when considering tourism demand? Which steps in the forecasting process would likely be different in a real-life tourism forecasting scenario?_